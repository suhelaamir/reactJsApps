[{"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\index.js":"1","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\App.js":"2","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\reportWebVitals.js":"3","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_helpers\\store.js":"4","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_helpers\\history.js":"5","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_privateRoute\\privaterout.js":"6","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\users\\create-user.js":"7","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\dashboard\\dashboard.js":"8","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\auth\\login.js":"9","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\users\\list-user.js":"10","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_reducers\\user.reducer.js":"11","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_actions\\user.actions.types.js":"12","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\footer.js":"13","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\header_components\\header.js":"14","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\sidebar_components\\sidebar.js":"15","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\header_components\\user_menu.js":"16","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\sidebar_components\\user_panel.js":"17","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_constants\\menu.js":"18","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\layouts.jsx":"19","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\auth\\loginTabset.js":"20","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_services\\login\\user.service.js":"21","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_actions\\user.actions.js":"22","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_validators\\formValidator.js":"23","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_helpers\\global.js":"24","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_helpers\\auth-header.js":"25","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\breadcrumb.js":"26","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\datatable.js":"27","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\customers\\customers.js":"28","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_helpers\\dbOperation.js":"29"},{"size":609,"mtime":1613322516981,"results":"30","hashOfConfig":"31"},{"size":1150,"mtime":1615262425754,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"31"},{"size":634,"mtime":1613385540065,"results":"34","hashOfConfig":"31"},{"size":164,"mtime":1613004546704,"results":"35","hashOfConfig":"31"},{"size":688,"mtime":1615262063066,"results":"36","hashOfConfig":"31"},{"size":262,"mtime":1613129853851,"results":"37","hashOfConfig":"31"},{"size":3194,"mtime":1615707086562,"results":"38","hashOfConfig":"31"},{"size":1148,"mtime":1613323726056,"results":"39","hashOfConfig":"31"},{"size":255,"mtime":1613129872095,"results":"40","hashOfConfig":"31"},{"size":462,"mtime":1613130198864,"results":"41","hashOfConfig":"31"},{"size":149,"mtime":1612383219342,"results":"42","hashOfConfig":"31"},{"size":935,"mtime":1613196978164,"results":"43","hashOfConfig":"31"},{"size":2130,"mtime":1613301761603,"results":"44","hashOfConfig":"31"},{"size":7620,"mtime":1615260992092,"results":"45","hashOfConfig":"31"},{"size":1245,"mtime":1615259701143,"results":"46","hashOfConfig":"31"},{"size":690,"mtime":1613302205861,"results":"47","hashOfConfig":"31"},{"size":762,"mtime":1615261945058,"results":"48","hashOfConfig":"31"},{"size":771,"mtime":1613295001813,"results":"49","hashOfConfig":"31"},{"size":15684,"mtime":1615083473571,"results":"50","hashOfConfig":"31"},{"size":3142,"mtime":1615421283054,"results":"51","hashOfConfig":"31"},{"size":305,"mtime":1612830076239,"results":"52","hashOfConfig":"31"},{"size":1420,"mtime":1615422984114,"results":"53","hashOfConfig":"31"},{"size":449,"mtime":1615075640159,"results":"54","hashOfConfig":"31"},{"size":690,"mtime":1615230364114,"results":"55","hashOfConfig":"31"},{"size":1435,"mtime":1613301954590,"results":"56","hashOfConfig":"31"},{"size":3538,"mtime":1615709766823,"results":"57","hashOfConfig":"31"},{"size":20994,"mtime":1615726428382,"results":"58","hashOfConfig":"31"},{"size":133,"mtime":1612828673956,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"bbxqtn",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\index.js",[],["125","126"],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\App.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\reportWebVitals.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_helpers\\store.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_helpers\\history.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_privateRoute\\privaterout.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\users\\create-user.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\dashboard\\dashboard.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\auth\\login.js",["127"],"import React, { Component, Fragment } from 'react';\r\nimport LoginTabset from \"./loginTabset\";\r\nimport { ArrowLeft} from 'react-feather';\r\n\r\nclass Login extends Component {\r\n    \r\n    render() {\r\n        \r\n        return(\r\n        <Fragment>\r\n                <div className=\"page-wrapper\">\r\n                    <div className=\"authentication-box\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12 p-0 card-right\">\r\n                                    <div className=\"card tab2-card\">\r\n                                        <div className=\"card-body\">\r\n                                            <LoginTabset />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <a href=\"#\" className=\"btn btn-primary back-btn\"> <ArrowLeft /> back</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Login;\r\n","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\users\\list-user.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_reducers\\user.reducer.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_actions\\user.actions.types.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\footer.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\header_components\\header.js",["128","129","130"],"import React, { Component, Fragment } from 'react'\r\nimport User_Menu from \"./user_menu\";\r\nimport { AlignLeft } from \"react-feather\";\r\n//Image\r\nimport Logo from \"../../../assets/images/SahosoftMallBachend-logo.png\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sidebar: true\r\n        };\r\n    }\r\n\r\n    OpenCloseSidebar = () => {\r\n        if(this.state.sidebar){\r\n            this.setState({sidebar: false});\r\n            document.querySelector(\".page-main-header\").classList.add('open');\r\n            document.querySelector(\".page-sidebar\").classList.add('open');\r\n        } else {\r\n            this.setState({ sidebar: true});\r\n            document.querySelector(\".page-main-header\").classList.remove('open');\r\n            document.querySelector(\".page-sidebar\").classList.remove('open');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n            <div className=\"page-main-header \">\r\n                <div className=\"main-header-right row\">\r\n                    <div className=\"main-header-left d-lg-none\" >\r\n                        <div className=\"logo-wrapper\">\r\n                            <a href=\"index.html\">\r\n                                    <img className=\"blur-up lazyloaded\" alt=\"Logo Image\" src={Logo} />\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mobile-sidebar\">\r\n                        <div className=\"media-body text-right switch-sm\">\r\n                                <label className=\"switch\"><a onClick={this.OpenCloseSidebar}><AlignLeft /></a></label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"nav-right col\">\r\n                        <ul className=\"nav-menus open\">\r\n                            <li>\r\n                                <User_Menu />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\sidebar_components\\sidebar.js",["131","132","133","134","135","136","137","138","139","140","141"],"import React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { MENUITEMS } from \"../../../_constants/menu\";\r\nimport Logo from \"../../../assets/images/SahosoftMallBachend-logo.png\";\r\nimport UserPanel from \"../../common/sidebar_components/user_panel\";\r\n\r\nclass Sidebar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            mainmenu: []\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            mainmenu: MENUITEMS\r\n        });\r\n    }\r\n\r\n    setNavActive(item) {\r\n        debugger;\r\n        MENUITEMS.filter(menuItem => {\r\n            if(menuItem != item) {\r\n                menuItem.active = false;\r\n            }\r\n            if(menuItem.children && menuItem.children.includes(item)) {\r\n                menuItem.active = true;\r\n            }\r\n            if(menuItem.children) {\r\n                menuItem.children.filter(subSubMenuItems => {\r\n                    if (subSubMenuItems != item) {\r\n                        subSubMenuItems.active = false;\r\n                    }\r\n                    if(subSubMenuItems.children){\r\n                        if(subSubMenuItems.children.includes(item)) {\r\n                            subSubMenuItems.active = true;\r\n                            menuItem.active = true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        item.active = !item.active;\r\n        this.setState({\r\n            mainmenu: MENUITEMS\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        var currentUrl = window.location.pathname;\r\n        this.state.mainmenu.filter(items => {\r\n            if(!items.children) {\r\n                if(items.path === currentUrl) {\r\n                    this.setNavActive(items);\r\n                    return false;\r\n                }\r\n            }\r\nif(items.children) {\r\n            items.children.filter(subItem => {\r\n                if(subItem.path === currentUrl) {\r\n                    this.setNavActive(subItem);\r\n                }\r\n                if(!subItem.children) {\r\n                    return false;\r\n                }\r\n\r\n                subItem.children.filter(subSubItems => {\r\n                    if(subSubItems.path === currentUrl) {\r\n                        this.setNavActive(subSubItems);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        });\r\n    }\r\n    \r\n\r\n\r\n\r\n    render(){\r\n        const mainmenu = this.state.mainmenu.map((menuItem, i) => {\r\n            return <li className={`${menuItem.active ? 'active': ''}`} key={i}>\r\n                {(menuItem.type === 'sub') ? \r\n                    <a className=\"sidebar-header\" href=\"javascript:void(0);\" onClick={() => this.setNavActive(menuItem)}>\r\n                        <menuItem.icon />\r\n                        <span>{menuItem.title}</span>\r\n                        <i className=\"fa fa-angle-right pull-right\"></i>\r\n                    </a> : ''\r\n                } \r\n\r\n                {\r\n                    (menuItem.type === 'link') ? <Link to={`${process.env.PUBLIC_URL}${menuItem.path}`} \r\n                    className={`sidebar-header ${menuItem.active ? 'active' : ''}`}\r\n                    onClick={() => this.setNavActive(menuItem)}\r\n                    >\r\n                        <menuItem.icon />\r\n                        <span>{menuItem.title   }</span>\r\n                        {menuItem.children ? <i className=\"fa fa-angle-right pull-right\"></i> : ''}\r\n                    </Link> : ''\r\n                }\r\n\r\n                { menuItem.children ? \r\n                    <ul className={`sidebar-submenu ${menuItem.active ? 'menu-open' : ''}`}>\r\n                        {menuItem.children.map((childrenItem, index)=>{\r\n                            //\r\n                            return <li className={`${childrenItem.children ? childrenItem.active ? 'active' : '' : ''}`} key={index}>\r\n                            {\r\n                                (childrenItem.type === 'sub') ?\r\n                                        <a href=\"javascript:void(0);\" onClick={() => this.setNavActive(childrenItem)}>\r\n                                            <i className=\"fa fa-circle\"></i>\r\n                                            <span>{childrenItem.title}</span>\r\n                                    <i className=\"fa fa-angle-right pull-right\"></i>\r\n                                </a> : ''\r\n                            }\r\n\r\n                            {\r\n                                    (childrenItem.type === 'link') ? \r\n                                    <Link to={`${process.env.PUBLIC_URL}${childrenItem.path}`}\r\n                                        className={`${childrenItem.active ? 'active' : ''}`}\r\n                                        onClick={() => this.setNavActive(childrenItem)}\r\n                                >\r\n                                        <i className=\"fa fa-circle\"></i>\r\n                                        <span>{childrenItem.title}</span>\r\n                                </Link> : ''\r\n                            }\r\n\r\n                            {childrenItem.children ?\r\n                                    <ul className={`sidebar-submenu ${childrenItem.active ? 'menu-open' : ''}`}>\r\n                                        {childrenItem.children.map((childrenSubItem, index) => {\r\n                                          return  <li className={`${childrenSubItem.active ? 'active' : ''}`} key={index}>\r\n                                                {\r\n                                                    (childrenSubItem.type === 'link') ? \r\n                                                    <Link to={`${process.env.PUBLIC_URL}${childrenSubItem.path}`}\r\n                                                        className={`${childrenSubItem.active ? 'active' : ''}`}\r\n                                                        onClick={() => this.setNavActive(childrenSubItem)}\r\n                                                    >\r\n                                                        <i className=\"fa fa-circle\"></i>\r\n                                                        <span>{childrenSubItem.title}</span>\r\n                                                    </Link> : ''\r\n                                                }\r\n                                            </li>\r\n                                        })}\r\n                                    </ul>\r\n                            : ''\r\n\r\n                            }\r\n\r\n                            </li>\r\n                            //\r\n                        })}\r\n                    </ul>\r\n                    : ''\r\n\r\n                }\r\n\r\n            </li>\r\n        });\r\n\r\n        return(\r\n            <Fragment>\r\n                <div className=\"page-sidebar\">\r\n                    <div className=\"main-header-left d-none d-lg-block\">\r\n                        <div className=\"logo-wrapper\">\r\n                            <Link to={`${process.env.PUBLIC_URL}/dashboard`}>\r\n                            <img className=\"blur-up lazyloaded\" alt=\"\" src={Logo}/>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sidebar custom-scrollbar\">\r\n                        <UserPanel />\r\n                        <ul className=\"sidebar-menu\">\r\n                            {/* bind menu here */}\r\n                            {mainmenu}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\header_components\\user_menu.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\sidebar_components\\user_panel.js",["142"],"import React, { Component, Fragment } from 'react';\r\nimport man from \"../../../assets/images/user.png\";\r\n\r\nclass UserPanel extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n                <div>\r\n                    <div className=\"sidebar-user text-center\">\r\n                        <div><img className=\"img-60 rounded-circle lazyloaded blur-up\" alt=\"user image\" src={man} />\r\n                        </div>\r\n                        <h6 className=\"mt-3 f-14\">Kamal Waris</h6>\r\n                        <p>Two Wheeler Engineering</p>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserPanel;","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_constants\\menu.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\layouts.jsx",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\auth\\loginTabset.js",["143","144"],"import React, { Component, Fragment } from 'react';\r\nimport { Tabs, TabList, TabPanel, Tab } from \"react-tabs\";\r\nimport { User, Unlock, Flag } from \"react-feather\";\r\n\r\n//HOC\r\nimport { withRouter } from \"react-router-dom\";\r\n//for popup notification\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n//login API call from the service\r\nimport { userService } from \"../../_services/login/user.service\";\r\n//read the current router history\r\nimport { history } from \"../../_helpers/history\";\r\n//connect the redux\r\nimport { connect } from \"react-redux\";\r\nimport { changeLoggedIn } from \"../../_actions/user.actions\";\r\n\r\n//validatation\r\nimport validator from \"validator\";\r\nimport FormValidator from \"../../_validators/formValidator\";\r\n\r\nclass LoginTabset extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.validatorLogin = new FormValidator([\r\n            {\r\n                field: 'userName',\r\n                method: 'isEmpty',\r\n                validWhen: false,\r\n                message: 'UserName is required'\r\n            },\r\n            {\r\n                field: 'userName',\r\n                method: 'isEmail',\r\n                validWhen: true,\r\n                message: 'Enter valid UserName'\r\n            },\r\n            {\r\n                field: 'password',\r\n                method: 'isEmpty',\r\n                validWhen: false,\r\n                message: 'Password is required'\r\n            }\r\n        ]);\r\n\r\n        this.validatorReg = new FormValidator([\r\n            {\r\n                field: 'firstName',\r\n                method: 'isEmpty',\r\n                validWhen: false,\r\n                message: 'firstName is required'\r\n            },\r\n            {\r\n                field: 'lastName',\r\n                method: 'isEmpty',\r\n                validWhen: false,\r\n                message: 'lastName is required'\r\n            },\r\n            {\r\n                field: 'email',\r\n                method: 'isEmpty',\r\n                validWhen: false,\r\n                message: 'email is required'\r\n            },\r\n            {\r\n                field: 'email',\r\n                method: 'isEmail',\r\n                validWhen: true,\r\n                message: 'Enter valida email'\r\n            },\r\n            {\r\n                field: 'password',\r\n                method: 'isEmpty',\r\n                validWhen: false,\r\n                message: 'password is required'\r\n            },\r\n            {\r\n                field: 'confirmPassword',\r\n                method: 'isEmpty',\r\n                validWhen: false,\r\n                message: 'confirm Password is required'\r\n            },\r\n            {\r\n                field: 'confirmPassword',\r\n                method: this.passwordMatch,\r\n                validWhen: true,\r\n                message: 'Password and Confirm Password do not match',\r\n            }\r\n        ]);\r\n\r\n        this.state = {\r\n            tabIndex: 0,\r\n\r\n            userName: '',\r\n            password: '',\r\n            loginSubmitted: false,\r\n\r\n            user: {\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: '',\r\n                userTypeId: 1\r\n            },\r\n            regSubmitted: false,\r\n            validationReg: this.validatorReg.valid(),\r\n            validationLogin: this.validatorLogin.valid()\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.doLogin = this.doLogin.bind(this);\r\n\r\n        this.logout();\r\n    }\r\n\r\n    passwordMatch = (confirmPassword, state) => {\r\n        return state.user.password === confirmPassword;\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    tabChange = (index) => {\r\n        this.setState({ tabIndex: index });\r\n    }\r\n\r\n    async doLogin(event) {\r\n        debugger;\r\n        event.preventDefault();\r\n        const validation = this.validatorLogin.validate(this.state, '');\r\n        this.setState({ validationLogin: validation });\r\n\r\n        //update the state of input\r\n        this.setState({ loginSubmitted: true });\r\n        const { userName, password } = this.state;\r\n\r\n        //make a call to API\r\n        if (validation.isValid) {\r\n            debugger;\r\n            userService.login(userName, password)\r\n                .then(\r\n                    res => {\r\n                        debugger;\r\n                        if (res.isSuccess) {\r\n                            if (res.data.id === 0) {\r\n                                this.clearLoginForm();\r\n                                toast.error(\"Please enter valid username and password !!\", 'Login');\r\n                                localStorage.removeItem(\"userDetails\");\r\n                            } else {\r\n                                localStorage.setItem(\"userDetails\", JSON.stringify(res.data));\r\n                                this.props.setLoggedIn(true, res.data);\r\n                                this.clearLoginForm();\r\n                                history.push('/dashboard');\r\n                            }\r\n                        } else {\r\n                            this.clearLoginForm();\r\n                            toast.error(\"Invalid credentials !!\", \"Login\");\r\n                            localStorage.removeItem(\"userDetails\");\r\n                        }\r\n                    },\r\n                    error => {\r\n                        toast.error(\"something went wrong, Please try again !!\", 'Login');\r\n                        this.clearLoginForm();\r\n                    }\r\n                );\r\n        }\r\n    }\r\n\r\n    clearLoginForm = () => {\r\n        this.setState({\r\n            userName: '',\r\n            password: ''\r\n        });\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.clear();\r\n        //update the store with blank data once logout\r\n        this.props.setLoggedIn(false, {});\r\n    }\r\n\r\n    handleInputChange=(event) => {\r\n        debugger;\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        const {user} = this.state;\r\n        this.setState({\r\n            user: { \r\n                ...user,\r\n                [name]: value \r\n            }\r\n        });\r\n    }\r\n\r\n    clearRegForm = () => {\r\n        this.setState(\r\n            {\r\n                user: {\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: '',\r\n                    userTypeId: 1,\r\n                    password: '',\r\n                    confirmPassword: ''\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        debugger;\r\n        event.preventDefault();\r\n        this.setState({regSubmitted: true});\r\n        const {user} = this.state;\r\n\r\n        const validation = this.validatorReg.validate(this.state, 'user')\r\n        this.setState({validationReg: validation});\r\n        if(validation.isValid) {\r\n            userService.register(user)\r\n            .then(\r\n                res => {\r\n                    if(res.isSuccess) {\r\n                        toast.success(\"Registration has been done successfully !!\" , \"Registration\");\r\n                        this.clearRegForm();\r\n                        this.setState({\r\n                            tabIndex: 0\r\n                        });\r\n                    } else {\r\n                        toast.error(res.errors[0], \"Registration\");\r\n                    }\r\n                },\r\n                error => {\r\n                    \r\n                }\r\n                );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        //destructuring exthe state value\r\n        const { userName, password, loginSubmitted, user, regSubmitted } = this.state;\r\n        let _validatorReg = regSubmitted ? this.validatorReg.validate(this.state, 'user') : this.state.validationReg;\r\n        let _validatorLogin = loginSubmitted ? this.validatorLogin.validate(this.state, '') : this.state.validationLogin;\r\n        return (\r\n            <div>\r\n                <Fragment>\r\n                    <Tabs selectedIndex={this.state.tabIndex} onSelect={(tabIndex) => this.tabChange(tabIndex)}>\r\n                        <TabList className=\"nav nav-tabs tab-coupon\">\r\n                            <Tab className=\"nav-link\"><Unlock /> Login</Tab>\r\n                            <Tab className=\"nav-link\"><User /> Register</Tab>\r\n                        </TabList>\r\n                        <TabPanel>\r\n                            Login Form\r\n<form className=\"form-horizontal auth-form\" onSubmit={this.doLogin}>\r\n                                <div className='form-group'>\r\n                                    <input name=\"userName\" type=\"email\"\r\n                                        className={\"form-control\" + (_validatorLogin.userName.isInvalid ? 'has-error' : '')}\r\n                                        placeholder=\"Username\" value={userName} onChange={this.handleChange} />\r\n                                    {\r\n                                        _validatorLogin.userName.isInvalid &&\r\n                                        <div className=\"help-block\">\r\n                                            {_validatorLogin.userName.message}\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <input name=\"password\" type=\"password\"\r\n                                        className={\"form-control\" + (_validatorLogin.password.isInvalid ? 'has-error' : '')}\r\n                                        placeholder=\"Password\" value={password} onChange={this.handleChange} />\r\n                                    {\r\n                                        _validatorLogin.password.isInvalid &&\r\n                                        <div className=\"help-block\">\r\n                                            {_validatorLogin.password.message}\r\n                                        </div>\r\n                                    }\r\n\r\n                                </div>\r\n                                <div className=\"form-button\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\" >Login</button>\r\n                                </div>\r\n                            </form>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            Registration Form\r\n<form className=\"form-horizontal auth-form\" onSubmit={this.handleSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input name=\"firstName\" type=\"text\" \r\n                                    className={'form-control' + (_validatorReg.firstName.isInvalid ? 'has-error' : '')}\r\n                                        placeholder=\"First Name\" value={user.firstName} onChange={this.handleInputChange} />\r\n                                        {\r\n                                            _validatorReg.firstName.isInvalid && \r\n                                            <div className=\"help-block\">\r\n                                                {_validatorReg.firstName.message}\r\n                                            </div>\r\n                                        }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input name=\"lastName\" type=\"text\" \r\n                                    className={'form-control' + (_validatorReg.lastName.isInvalid ? 'has-error' : '')}\r\n                                        placeholder=\"Last Name\" value={user.lastName} onChange={this.handleInputChange} />\r\n                                        {\r\n                                            _validatorReg.lastName.isInvalid &&\r\n                                            <div className=\"help-block\">\r\n                                            {\r\n                                                _validatorReg.lastName.message\r\n                                            }\r\n                                            </div>\r\n                                        }\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input name=\"email\" type=\"email\" \r\n                                    className={'form-control'+(_validatorReg.email.isInvalid ? 'has-error' : '')}\r\n                                        placeholder=\"Email\" value={user.email} onChange={this.handleInputChange}/>\r\n                                        {\r\n                                            _validatorReg.email.isInvalid &&\r\n                                            <div className=\"help-block\">\r\n                                                {\r\n                                                    _validatorReg.email.message\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input name=\"password\" type=\"password\" \r\n                                    className={'form-control'+(_validatorReg.password.isInvalid ? 'has-error' : '')}\r\n                                        placeholder=\"Password\" value={user.password} onChange={this.handleInputChange} />\r\n                                    {\r\n                                        _validatorReg.password.isInvalid && \r\n                                        <div className=\"help-block\">\r\n                                            {\r\n                                                _validatorReg.password.message\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input name=\"confirmPassword\" type=\"password\" \r\n                                    className={'form-control'+(_validatorReg.confirmPassword.isInvalid ? 'has-error' :'')}\r\n                                        placeholder=\"Confirm Password\" value={user.confirmPassword} onChange={this.handleInputChange} />\r\n                                    {\r\n                                        _validatorReg.confirmPassword.isInvalid && \r\n                                        <div className=\"help-block\">\r\n                                            {_validatorReg.confirmPassword.message}\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-button\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">Register</button>\r\n                                </div>\r\n                            </form>\r\n                        </TabPanel>\r\n                    </Tabs>\r\n                </Fragment>\r\n                <ToastContainer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLoggedIn: (isLoggedIn, user) => {\r\n            dispatch(changeLoggedIn(isLoggedIn, user))\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(withRouter(LoginTabset));\r\n\r\n","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_services\\login\\user.service.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_actions\\user.actions.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_validators\\formValidator.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_helpers\\global.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_helpers\\auth-header.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\breadcrumb.js",[],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\common\\datatable.js",["145"],"import React, { Component, Fragment } from 'react'\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nexport default class DataTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        debugger;\r\n        this.state = {\r\n            myData: this.props.myData\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        debugger;\r\n        this.setState({ myData: nextProps.myData });\r\n    }\r\n\r\n    Capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    render() {\r\n        const { showColumns, editRow, deleteRow, action } = this.props;\r\n        //alert(this.props.action);\r\n        //const { showColumns} = this.props;\r\n        const { myData } = this.state;\r\n        const columns = [];\r\n        let colName = \"\";\r\n        for (let key of showColumns) {\r\n            debugger;\r\n                colName = key.toString();\r\n            \r\n\r\n            if (key === \"imagePath\") {\r\n                columns.push(\r\n                    {\r\n                        Header: <b>{this.Capitalize(colName)}</b>,\r\n                        accessor: key,\r\n                        Cell: (row) => {\r\n                            console.log(row);\r\n                            <img alt=\"_image\" src={row.original.imagePath} style={{ width: 50, height: 50 }} />\r\n                        },\r\n                        style: {\r\n                            textAlign: 'center'\r\n                        },\r\n                        sortable: false\r\n                    }\r\n                );\r\n            } else {\r\n                debugger;\r\n                columns.push(\r\n                    {\r\n                        Header: <b>{this.Capitalize(colName)}</b>,\r\n                        accessor: key,\r\n                        style: {\r\n                            textAlign: 'center'\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n         }\r\n        if(!action) {\r\n        columns.push(\r\n            {\r\n                Header: <b>Actions</b>,\r\n                accessor: 'delete',\r\n                Cell: (row) => (\r\n                    <div>\r\n                        <span onClick={() => {\r\n                            let data = myData[row.index];\r\n                            deleteRow(data.id);\r\n                        }} >\r\n                            <i class=\"fa fa-trash-o\"></i>\r\n                        </span>\r\n\r\n                        <span onClick={() => {\r\n                            let data = myData[row.index];\r\n                            editRow(data);\r\n                        }} >\r\n                            <i class=\"fa fa-edit\"></i>\r\n                        </span>\r\n                    </div>\r\n                ),\r\n                style: {\r\n                    textAlign: 'center'\r\n                },\r\n                sortable: false\r\n            }\r\n        \r\n        )\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <ReactTable\r\n                    noDataText=\"Loading...\"\r\n                    data={myData}\r\n                    columns={columns}\r\n                    minRows={0}\r\n                    defaultPageSize={(myData.length > 5 ? 5 : myData.length) === 0 ? 5 : myData.length}\r\n                    showPagination={myData.length > 5 ? true : false}\r\n                />\r\n                <ToastContainer />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n","E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_components\\customers\\customers.js",["146"],"E:\\sahosoft\\ReactJs\\product\\productadmin\\src\\_helpers\\dbOperation.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":23,"column":29,"nodeType":"153","endLine":23,"endColumn":78},{"ruleId":"154","severity":1,"message":"155","line":35,"column":37,"nodeType":"153","endLine":35,"endColumn":103},{"ruleId":"151","severity":1,"message":"156","line":41,"column":59,"nodeType":"153","endLine":41,"endColumn":94},{"ruleId":"157","severity":1,"message":"158","line":47,"column":33,"nodeType":"153","endLine":47,"endColumn":46},{"ruleId":"159","severity":1,"message":"160","line":23,"column":35,"nodeType":"161","messageId":"162","endLine":23,"endColumn":37},{"ruleId":"163","severity":1,"message":"164","line":24,"column":25,"nodeType":"165","messageId":"166","endLine":24,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":31,"column":58,"nodeType":"161","messageId":"162","endLine":31,"endColumn":60},{"ruleId":"163","severity":1,"message":"164","line":32,"column":41,"nodeType":"165","messageId":"166","endLine":32,"endColumn":43},{"ruleId":"159","severity":1,"message":"167","line":54,"column":42,"nodeType":"161","messageId":"168","endLine":54,"endColumn":44},{"ruleId":"159","severity":1,"message":"167","line":62,"column":43,"nodeType":"161","messageId":"168","endLine":62,"endColumn":45},{"ruleId":"159","severity":1,"message":"160","line":70,"column":53,"nodeType":"161","messageId":"162","endLine":70,"endColumn":55},{"ruleId":"151","severity":1,"message":"152","line":87,"column":21,"nodeType":"153","endLine":87,"endColumn":122},{"ruleId":"169","severity":1,"message":"170","line":87,"column":56,"nodeType":"171","messageId":"172","endLine":87,"endColumn":77},{"ruleId":"151","severity":1,"message":"152","line":112,"column":41,"nodeType":"153","endLine":112,"endColumn":119},{"ruleId":"169","severity":1,"message":"170","line":112,"column":49,"nodeType":"171","messageId":"172","endLine":112,"endColumn":70},{"ruleId":"154","severity":1,"message":"155","line":11,"column":30,"nodeType":"153","endLine":11,"endColumn":117},{"ruleId":"173","severity":1,"message":"174","line":3,"column":24,"nodeType":"175","messageId":"176","endLine":3,"endColumn":28},{"ruleId":"173","severity":1,"message":"177","line":19,"column":8,"nodeType":"175","messageId":"176","endLine":19,"endColumn":17},{"ruleId":"173","severity":1,"message":"178","line":4,"column":26,"nodeType":"175","messageId":"176","endLine":4,"endColumn":31},{"ruleId":"179","severity":1,"message":"180","line":151,"column":13,"nodeType":"181","messageId":"182","endLine":189,"endColumn":14},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-pascal-case","Imported JSX component User_Menu must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-unused-vars","'Flag' is defined but never used.","Identifier","unusedVar","'validator' is defined but never used.","'toast' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]